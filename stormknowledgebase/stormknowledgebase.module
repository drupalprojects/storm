<?php
// $Id$

/**
 * @file
 */

function stormknowledgebase_help($path, $arg) {
  $o = '';

  switch ($path) {
    case "admin/help#stormknowledgebase":
      $o = '<p>'. t('Provides knowledgebase support for Storm') .'</p>';
      break;
  }

  return $o;
}

function stormknowledgebase_permission() {
  return array(
    'Storm knowledgebase: access' => array(
      'title' => t('Access Knowledgebase'),
    ),
    'Storm knowledgebase: add' => array(
      'title' => t('Create Knowledgebase content'),
    ),
    'Storm knowledgebase: delete all' => array(
      'title' => t('Delete any Knowledgebase content'),
    ),
    'Storm knowledgebase: delete own' => array(
      'title' => t('Delete own Knowledgebase content'),
      'description' => t('Delete Knowledgebase content, created by the user'),
    ),
    'Storm knowledgebase: edit all' => array(
      'title' => t('Edit any Knowledgebase content'),
    ),
    'Storm knowledgebase: edit own' => array(
      'title' => t('Edit own Knowledgebase content'),
      'description' => t('Edit Knowledgebase content, created by the user'),
    ),
    'Storm knowledgebase: view all' => array(
      'title' => t('View any Knowledgebase content'),
    ),
    'Storm knowledgebase: view own' => array(
      'title' => t('View own Knowledgebase content'),
      'description' => t('View Knowledgebase content, created by the user'),
    ),
  );
}

function stormknowledgebase_access($op, $node, $account=NULL) {
  if (empty($account)) {
    global $user;
    $account = $user;
  }

  if ($op == 'create') {
    return user_access('Storm knowledgebase: add');
  }

  if (is_numeric($node)) {
    $node = node_load($node);
  }

  if ($op == 'delete') {
    if (user_access('Storm knowledgebase: delete all')) {
      return TRUE;
    }
    else if (user_access('Storm knowledgebase: delete own') && ($account->uid == $node->uid)) {
      return TRUE;
    }
  }

  if ($op == 'update') {
    if (user_access('Storm knowledgebase: edit all')) {
      return TRUE;
    }
    else if (user_access('Storm knowledgebase: edit own') && ($account->uid == $node->uid)) {
      return TRUE;
    }
  }

  if ($op == 'view') {
    if (user_access('Storm knowledgebase: view all')) {
      return TRUE;
    }
    else if (user_access('Storm knowledgebase: view own') && ($account->uid == $node->uid)) {
      return TRUE;
    }
  }
  return FALSE;
}

function stormknowledgebase_access_sql($sql, $where = array()) {
  if (user_access('Storm knowledgebase: view all')) {
    $where[] = "'storm_access'='storm_access'";
    return storm_rewrite_sql($sql, $where);
  }

  global $user;

  $cond = '';
  if (user_access('Storm knowledgebase: view own')) {
    $cond .= 'n.uid='. $user->uid;
  }
  if (empty($cond)) $cond = '0=1';
  $where[] = $cond;

  $where[] = "'storm_access'='storm_access'";
  return storm_rewrite_sql($sql, $where);
}

function stormknowledgebase_storm_rewrite_where_sql($query, $primary_table, $account) {
  static $conds = array();

  if ($conds[$primary_table][$account->uid]) {
    return $conds[$primary_table][$account->uid];
  }

  if (preg_match("/'storm_access'='storm_access'/", $query)) {
    $cond = '';
  }
  else {
    if (user_access('Storm knowledgebase: view all', $account)) {
      return '';
    }

    $cond = '';
    if (user_access('Storm knowledgebase: view own', $account)) {
      $cond .= " ${primary_table}.uid=". $account->uid;
    }
    if ($cond) {
      $cond = " WHEN 'stormknowledgebase' THEN IF($cond,1,0) ";
    }
    else {
      $cond = " WHEN 'stormknowledgebase' THEN 0 ";
    }
  }

  $conds[$primary_table][$account->uid] = $cond;
  return $cond;
}

function stormknowledgebase_menu() {
  $items = array();

  $items['storm/knowledgebase'] = array(
    'title' => 'Knowledge base',
    'description' => 'Storm Knowledge base',
    'page callback' => 'stormknowledgebase_list',
    'access arguments' => array('Storm knowledgebase: access'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'stormknowledgebase.admin.inc',
  );

  return $items;
}

function stormknowledgebase_theme() {
  return array(
    'stormknowledgebase_view' => array(
      'file'      => 'stormknowledgebase.theme.inc',
      'arguments' => array('node', 'teaser', 'page'),
    ),
    'stormknowledgebase_list' => array(
      'file'      => 'stormknowledgebase.theme.inc',
      'arguments' => array('header'),
    ),
  );
}

function stormknowledgebase_node_info() {
  return array(
    'stormknowledgebase' => array(
      'name' => t('Knowledge base'),
      'base' => 'stormknowledgebase',
      'description' => t('A knowledgebase article for Storm.'),
      'has_body' => true,
    )
  );
}

function stormknowledgebase_views_api() {
  return array(
    'api' => 2,
    'path' => drupal_get_path('module', 'stormknowledgebase'),
  );
}
