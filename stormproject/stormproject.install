<?php
/**
 * @file
 * Installation functions for the Storm project module
 */
function stormproject_install() {
  variable_set('node_options_stormproject', array('status'));

  // Uncache node types
  node_types_rebuild();

  // Fetch list of current node types and add body field to stormproject
  $types = node_type_get_types();
  node_add_body_field($types['stormproject'],'Description');

  $attributes = array();

  $attributes['Project status'] = array(
    'inserted' => 'inserted',
    'in progress' => 'in progress',
    'on hold' => 'on hold',
    'completed' => 'completed'
  );

  $attributes['Project status search'] = array(
    '-' => 'all',
    'inserted,in progress,on hold' => 'open',
    'inserted' => '-- inserted',
    'in progress' => '-- in progress',
    'on hold' => '-- on hold',
    'completed' => 'completed'
  );

  $attributes['Project category'] = array(
    'development' => 'development',
    'support' => 'support',
  );

  $attributes['Project category search'] = array(
    '-' => 'all',
    'development' => 'development',
    'support' => 'support',
  );

  $attributes['Project priority'] = array(
    '1-low' => 'low',
    '2-normal' => 'normal',
    '3-high' => 'high',
    '4-urgent' => 'urgent'
  );

  $attributes['Project priority search'] = array(
    '-' => 'all',
    '1-low' => 'low',
    '2-normal' => 'normal',
    '3-high' => 'high',
    '4-urgent' => 'urgent'
  );

  $attributes['Duration unit'] = array(
    'hour' => 'Hour',
    'day' => 'Day',
  );

  $prevdomain = '';
  $weight = 0;
  foreach ($attributes as $domain => $attribute) {
    if ($domain != $prevdomain) $weight=0;
    foreach ($attribute as $key => $value) {
      db_insert('stormattribute')
        ->fields(array(
          'domain' => $domain,
          'akey' => $key,
          'avalue' => $value,
          'weight' => $weight,
        ))
        ->execute();
      $weight++;
    }
    $prevdomain = $domain;
  }
}

function stormproject_disable() {
  drupal_set_message(t('Nodes of type "Project" have not been deleted on disabling Storm Project. Please note that they will now have reduced functionality, and will not be protected by Storm Project access controls.'), 'warning');
}

function stormproject_uninstall() {
  drupal_uninstall_schema('stormproject');

  db_delete('stormattribute')
    ->condition('domain', array('Project status', 'Project status search', 'Project category', 'Project category search', 'Project priority', 'Project priority search', 'Duration unit'), 'IN')
    ->execute();
}

function stormproject_schema() {
  $schema['stormproject'] = array(
    'fields'                => array(
      'vid'                 => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
      'nid'                 => array('type' => 'int', 'not null' => TRUE, 'default' => 0),
      'organization_nid'    => array('type' => 'int'),
      'organization_title'  => array('type' => 'varchar', 'length' => 100),
      'projectstatus'       => array('type' => 'varchar', 'length' => 100),
      'projectcategory'     => array('type' => 'varchar', 'length' => 100),
      'projectpriority'     => array('type' => 'varchar', 'length' => 100),
      'pricemode'           => array('type' => 'varchar', 'length' => 100),
      'price'               => array('type' => 'float'),
      'currency'            => array('type' => 'varchar', 'length' => 100),
      'datebegin'           => array('type' => 'int', 'default' => 0),
      'dateend'             => array('type' => 'int', 'default' => 0),
      'durationunit'        => array('type' => 'varchar', 'length' => 100),
      'duration'            => array('type' => 'float', 'default' => 0),
      'manager_nid'         => array('type' => 'int'),
      'manager_title'       => array('type' => 'varchar', 'length' => 100),
      'assigned_nid'        => array('type' => 'int'),
      'assigned_title'      => array('type' => 'varchar', 'length' => 100),
      'billable'            => array('type' => 'int', 'default' => 0),
      'billed'              => array('type' => 'int', 'default' => 0),
    ),
    'primary key' => array('vid'),
    'indexes'     => array(
      'nid'              => array('nid'),
      'organization_nid' => array('organization_nid'),
      'manager_nid'      => array('manager_nid'),
      'assigned_nid'     => array('assigned_nid'),
    )
  );

  return $schema;
}

function stormproject_update_last_removed() {
  return 6202;
}

/**
 * Adds Drupal 7 style body field to storm project node
 */
function stormproject_update_7100() {
  // Uncache node types
  node_types_rebuild();
  // Fetch list of current node types and add body field to storm project
  $types = node_type_get_types();
  node_add_body_field($types['stormproject'],'Description');

  return 'Added D7 style body field to storm project nodes';
}
